/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paulousimulationcode;

import java.util.ArrayList;

/**
 *
 * @author Zolotas
 */
public class Utilities {

    public static double memWeight = 1;
    public static double procWeight = 1.2;
    public static double batteryWeight = 0.8;
    public static double mobilityWeight = 2;
    public static double ComputingLoadWeight = 4;

    public static double maxNeighbourDistance = 15;

    public static int zoomRatio=5;
    public static double xBound = 100;
    public static double yBound = 100;
    public static double zBound = 100;

    public static int sizeOfNodeSet = 40;
    public static int SimulationSteps = 5000000;

    public static double CF(Node x) {
        double nominator = memWeight * (x.getMemory() / x.maxMemory);
        nominator += procWeight * (x.getProcessor() / Node.maxProcessor);
        nominator += batteryWeight * (x.getBattery() / x.maxBattery);

        double denominator = mobilityWeight * x.getMobility();
        denominator += ComputingLoadWeight * x.getComputingLoad();

        double valueToReturn = 999;
        try {
            valueToReturn = nominator / denominator;
        } catch (Exception e) {
            valueToReturn = 999;
        }
        return valueToReturn;
    }
    
    public static void calculateMobilityRatio(Node x){
        try{
            x.setMobility((sum((ArrayList<Integer>)x.getMobilityInTime().subList(0, 10))/10)/x.getNeighbours().size());
        }
        catch(Exception e){
            x.setMobility(sum(x.getMobilityInTime())/x.getMobilityInTime().size()/x.getNeighbours().size());
        }
    }
    public static double sum(ArrayList<Integer> ra){
        int sum=0;
        for(Integer i:ra){
            sum+=i;
        }
        return sum;
    }
}
