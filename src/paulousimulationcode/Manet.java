/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paulousimulationcode;

import java.util.ArrayList;

/**
 *
 * @author Zolotas
 */
public class Manet extends Cycleable {
    private ArrayList<Node> NodeSet;

    public Manet() {
        this.NodeSet = new ArrayList<Node>();
    }

    public ArrayList<Node> getNodeSet() {
        return NodeSet;
    }

    public void setNodeSet(ArrayList NodeSet) {
        this.NodeSet = NodeSet;
    }
    
    @Override
    public void Cycle(){
        calculateNeighbours();
    }
    
    public void calculateNeighbours(){
        for(int i=0;i<NodeSet.size();i++){
            int totalBreaks=0;
            ArrayList<Node> tempAccess =(ArrayList) NodeSet.get(i).getNeighbours().clone();
            for(Node n : tempAccess){
                if (NodeSet.get(i).getPosition().distance(n.getPosition())>Utilities.maxNeighbourDistance){
                    NodeSet.get(i).getNeighbours().remove(n);
                    totalBreaks++;
                }
            }
            NodeSet.get(i).getMobilityInTime().add(0,totalBreaks);
            for(int j=0;j<NodeSet.size();j++){
                if(j==i){
                    continue;
                }
                else{
                    double distance = NodeSet.get(i).getPosition().distance(NodeSet.get(j).getPosition());
                    if(distance<Utilities.maxNeighbourDistance &&!NodeSet.get(i).getNeighbours().contains(NodeSet.get(j)) ){
                        //System.out.println("adding "+j+" to "+i);
                        NodeSet.get(i).getNeighbours().add(NodeSet.get(j));
                    }
                }
            }
            
        }
    }
}
